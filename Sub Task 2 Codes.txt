
#Step 1 : Create a VPC
resource "aws_vpc" "myvpc"{
    cidr_block = "10.0.0.0/16"
    tags = {
        Name = "MyTerraformVPC"
    }
}


#Step 2 : Create a public subnet
resource "aws_subnet" "PublicSubnet"{
    vpc_id = aws_vpc.myvpc.id
    cidr_block = "10.0.1.0/24"
}


#Step 3 : Create a private subnet
resource "aws_subnet" "PrivateSubnet"{
    vpc_id = aws_vpc.myvpc.id
    cidr_block = "10.0.2.0/24"
}


#Step 4 : Create a public subnet
resource "aws_subnet" "PublicSubnet"{
    vpc_id = aws_vpc.myvpc.id
    cidr_block = "10.0.3.0/24"
}


#Step 3 : Create a private subnet
resource "aws_subnet" "PrivateSubnet"{
    vpc_id = aws_vpc.myvpc.id
    cidr_block = "10.0.4.0/24"
}



#Step 4 : Create IGW
resource "aws_internet_gateway" "igw"{
    vpc_id = aws_vpc.myvpc.id
}

#Step 5 : route Tables for plubic subnet
resource "aws_route_table" "PublicRT"{
    vpc_id = aws_vpc.myvpc.id
    route {
        cidr_block = "0.0.0.0/0"
        gateway_id = aws_internet_gateway.igw.id
    }
}


#Step 6 : route table association public subnet
resource "aws_route_table_association" "PublicRTassociation"{
    subnet_id = aws_subnet.PublicSubnet.id
    route_table_id = aws_route_table.PublicRT.id
}

#Step 7 : Internet Gate Way
resource "aws_internet_gateway" "gateway" {
 vpc_id = "${aws_vpc.gateway.id}"
 tags = {
    Name = "gateway-igw"
 }
}

# - Creating Elastic IP


resource "aws_eip" "amit1998-eip" {
  vpc=true
}

# -- Creating Subnet


data "aws_availability_zones" "amit1998-azs" {
  state = "available"
}








































